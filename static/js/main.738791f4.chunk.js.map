{"version":3,"sources":["index.js"],"names":["Square","value","onClick","highlighted","className","Board","i","this","props","squares","board","highlight","row","j","push","renderSquare","indexOf","React","Component","calculateWinner","lines","length","a","b","c","player","line","Game","state","history","Array","fill","xIsNext","stepNumber","selectedItem","position","isAscending","slice","setState","concat","step","status","current","winner","moves","map","move","col","Math","floor","desc","jumpTo","reverse","handleClick","style","margin","sortListMove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.738791f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './index.css';\r\n\r\nfunction Square({ value, onClick, highlighted }) {\r\n  return (\r\n    <button className={highlighted ? \"winner-square\" : \"square\"} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i, highlighted) {\r\n    return (\r\n      <Square\r\n        key={i}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        highlighted={highlighted}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let board = [];\r\n    const highlight = this.props.highlight;\r\n\r\n    if (highlight) {\r\n      for (let i = 0; i < 3; i++) {\r\n        let row = [];\r\n  \r\n        for (let j = i * 3; j < i * 3 + 3; j++) {\r\n            row.push(this.renderSquare(j, highlight.indexOf(j) !== -1));\r\n        }\r\n  \r\n        board.push(<div key={`row-${i}`} className=\"board-row\">{row}</div>);\r\n      }\r\n    } else {\r\n      for (let i = 0; i < 3; i++) {\r\n        let row = [];\r\n  \r\n        for (let j = i * 3; j < i * 3 + 3; j++) {\r\n          row.push(this.renderSquare(j));\r\n        }\r\n  \r\n        board.push(<div key={`row-${i}`} className=\"board-row\">{row}</div>);\r\n      }\r\n    }\r\n    \r\n    return board;\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {\r\n        player: squares[a],\r\n        line: lines[i],\r\n      };\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      selectedItem: -1,\r\n      position: [0],\r\n      isAscending: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    let position = this.state.position;\r\n\r\n    if (this.state.position.slice.length <= history.length) {\r\n      position = this.state.position.slice(0, this.state.stepNumber);\r\n      position.push(i);\r\n    }\r\n\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n      position: position,\r\n      selectedItem: -1,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n      selectedItem: step,\r\n    });\r\n  }\r\n\r\n  sortListMove() {\r\n    this.setState({\r\n      isAscending: !this.state.isAscending,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    let moves = history.map((step, move) => {\r\n      const col = this.state.position[move - 1] % 3 + 1;\r\n      const row = Math.floor(this.state.position[move - 1] / 3) + 1;\r\n      const desc = move ?\r\n        'Go to move #' + move + \": (\" + col + \", \" + row + \")\" :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>\r\n            {move === this.state.selectedItem ? <b>{desc}</b> : desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    if (!this.state.isAscending) moves = moves.reverse();\r\n\r\n    let status;\r\n    \r\n    if (winner) {\r\n      status = 'Winner: ' + winner.player;\r\n    } else if (this.state.stepNumber === 9) {\r\n      status = 'Draw';\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            highlight={winner ? winner.line : null}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <div>Sort: <button style={{ margin: 10 }}\r\n            onClick={() => this.sortListMove()}\r\n          >\r\n            {this.state.isAscending ? \"Ascending\" : \"Descending\"}\r\n          </button>\r\n          </div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}